2021-07-26 17:25:09 - INFO - saving to ./results/
2021-07-26 17:25:09 - DEBUG - run arguments: Namespace(Tmax=10.0, Tmin=0.01, a32=False, batch_size=256, batch_size_test=128, data_path='./data', dataset='rml', epochs=1000, evaluate=None, gpus='0', lr=0.1, lr_decay_step=None, lr_type='cos', model='resnet18A', momentum=0.9, print_freq=100, results_dir='./results', resume=False, rotation_update=1, save='', seed=1234, start_epoch=-1, time_estimate=1, type='torch.cuda.FloatTensor', warm_up=True, weight_decay=0.0001, workers=8)
2021-07-26 17:25:35 - INFO - creating model resnet18A
2021-07-26 17:25:35 - INFO - model structure: ResNet(
  (conv1): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layer1): Sequential(
    (0): BasicBlock_real(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (tanh1): Hardtanh(min_val=-1.0, max_val=1.0, inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (tanh2): Hardtanh(min_val=-1.0, max_val=1.0, inplace=True)
      (shortcut): Sequential()
    )
    (1): BasicBlock_real(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (tanh1): Hardtanh(min_val=-1.0, max_val=1.0, inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (tanh2): Hardtanh(min_val=-1.0, max_val=1.0, inplace=True)
      (shortcut): Sequential()
    )
  )
  (layer2): Sequential(
    (0): BasicBlock_real(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (tanh1): Hardtanh(min_val=-1.0, max_val=1.0, inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (tanh2): Hardtanh(min_val=-1.0, max_val=1.0, inplace=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock_real(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (tanh1): Hardtanh(min_val=-1.0, max_val=1.0, inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (tanh2): Hardtanh(min_val=-1.0, max_val=1.0, inplace=True)
      (shortcut): Sequential()
    )
  )
  (layer3): Sequential(
    (0): BasicBlock_real(
      (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (tanh1): Hardtanh(min_val=-1.0, max_val=1.0, inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (tanh2): Hardtanh(min_val=-1.0, max_val=1.0, inplace=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock_real(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (tanh1): Hardtanh(min_val=-1.0, max_val=1.0, inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (tanh2): Hardtanh(min_val=-1.0, max_val=1.0, inplace=True)
      (shortcut): Sequential()
    )
  )
  (layer4): Sequential(
    (0): BasicBlock_real(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (tanh1): Hardtanh(min_val=-1.0, max_val=1.0, inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (tanh2): Hardtanh(min_val=-1.0, max_val=1.0, inplace=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock_real(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (tanh1): Hardtanh(min_val=-1.0, max_val=1.0, inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (tanh2): Hardtanh(min_val=-1.0, max_val=1.0, inplace=True)
      (shortcut): Sequential()
    )
  )
  (bn2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=128, out_features=11, bias=True)
  (avgpool): AvgPool1d(kernel_size=(16,), stride=(16,), padding=(0,))
  (logsoft): LogSoftmax(dim=None)
)
2021-07-26 17:25:35 - INFO - number of parameters: 734635
2021-07-26 17:25:48 - INFO - criterion: NLLLoss()
2021-07-26 17:25:48 - INFO - scheduler: <torch.optim.lr_scheduler.CosineAnnealingLR object at 0x7f22d5d9d610>
2021-07-26 17:25:51 - INFO - lr: 0.02
2021-07-26 17:25:54 - INFO - TRAINING - Epoch: [0][0/645]	Time 2.543 (2.543)	Data 0.520 (0.520)	Loss 2.5098 (2.5098)	Prec@1 10.938 (10.938)	Prec@5 44.531 (44.531)
2021-07-26 17:26:03 - INFO - TRAINING - Epoch: [0][100/645]	Time 0.093 (0.117)	Data 0.001 (0.006)	Loss 1.8434 (2.1276)	Prec@1 32.812 (22.509)	Prec@5 81.250 (66.770)
2021-07-26 17:26:12 - INFO - TRAINING - Epoch: [0][200/645]	Time 0.094 (0.105)	Data 0.001 (0.003)	Loss 1.5490 (1.9047)	Prec@1 40.234 (29.612)	Prec@5 83.203 (74.815)
2021-07-26 17:26:21 - INFO - TRAINING - Epoch: [0][300/645]	Time 0.095 (0.101)	Data 0.001 (0.002)	Loss 1.5067 (1.7859)	Prec@1 44.922 (33.620)	Prec@5 84.766 (77.934)
